diff --git a/CRM/Case/Form/Activity.php b/CRM/Case/Form/Activity.php
index b027243ff4f..a1a1cf0bc57 100644
--- a/CRM/Case/Form/Activity.php
+++ b/CRM/Case/Form/Activity.php
@@ -70,7 +70,7 @@ public function preProcess() {
     $this->_crmDir = 'Case';
     $this->assign('context', $this->_context);
 
-    $result = parent::preProcess();
+    parent::preProcess();
 
     $scheduleStatusId = CRM_Core_PseudoConstant::getKey('CRM_Activity_BAO_Activity', 'activity_status_id', 'Scheduled');
     $this->assign('scheduleStatusId', $scheduleStatusId);
@@ -372,7 +372,9 @@ public function postProcess($params = NULL) {
         }
       }
       else {
-        $statusMsg = ts("Selected Activity cannot be deleted.");
+        CRM_Core_Session::setStatus('', ts("Selected Activity cannot be deleted."), 'warning');
+        $transaction->rollback();
+        return;
       }
 
       $tagParams = array(
@@ -382,6 +384,7 @@ public function postProcess($params = NULL) {
       CRM_Core_BAO_EntityTag::del($tagParams);
 
       CRM_Core_Session::setStatus('', $statusMsg, 'info');
+      $transaction->commit();
       return;
     }
 
@@ -393,6 +396,7 @@ public function postProcess($params = NULL) {
         $statusMsg = ts('The selected activity has been restored.<br />');
       }
       CRM_Core_Session::setStatus('', $statusMsg, 'info');
+      $transaction->commit();
       return;
     }
 
@@ -440,15 +444,12 @@ public function postProcess($params = NULL) {
 
       // build custom data getFields array
       $customFields = CRM_Core_BAO_CustomField::getFields('Activity', FALSE, FALSE, $this->_activityTypeId);
-      $customFields = CRM_Utils_Array::crmArrayMerge($customFields,
+      CRM_Utils_Array::crmArrayMerge($customFields,
         CRM_Core_BAO_CustomField::getFields('Activity', FALSE, FALSE,
           NULL, NULL, TRUE
         )
       );
-      $params['custom'] = CRM_Core_BAO_CustomField::postProcess($params,
-        $this->_activityId,
-        'Activity'
-      );
+      $params['custom'] = CRM_Core_BAO_CustomField::postProcess($params, $this->_activityId, 'Activity');
     }
 
     // assigning formatted value
@@ -573,7 +574,7 @@ public function postProcess($params = NULL) {
       unset($caseParams['subject'], $caseParams['details'],
         $caseParams['status_id'], $caseParams['custom']
       );
-      $case = CRM_Case_BAO_Case::create($caseParams);
+      CRM_Case_BAO_Case::create($caseParams);
       // create case activity record
       $caseParams = array(
         'activity_id' => $vval['actId'],
@@ -581,10 +582,7 @@ public function postProcess($params = NULL) {
       );
       CRM_Case_BAO_Case::processCaseActivity($caseParams);
     }
-
-    // Insert civicrm_log record for the activity (e.g. store the
-    // created / edited by contact id and date for the activity)
-    // Note - civicrm_log is already created by CRM_Activity_BAO_Activity::create()
+    $transaction->commit();
 
     // send copy to selected contacts.
     $mailStatus = '';
@@ -593,8 +591,6 @@ public function postProcess($params = NULL) {
     //CRM-5695
     //check for notification settings for assignee contacts
     $selectedContacts = array('contact_check');
-    $activityContacts = CRM_Activity_BAO_ActivityContact::buildOptions('record_type_id', 'validate');
-    $assigneeID = CRM_Utils_Array::key('Activity Assignees', $activityContacts);
     if (Civi::settings()->get('activity_assignee_notification')) {
       $selectedContacts[] = 'assignee_contact_id';
     }
diff --git a/CRM/Case/Form/Case.php b/CRM/Case/Form/Case.php
index de0ba89cb4f..ab91ad5d2ed 100644
--- a/CRM/Case/Form/Case.php
+++ b/CRM/Case/Form/Case.php
@@ -355,6 +355,7 @@ public function testSubmit($params, $activityTypeFile, $contactId, $context = "c
    * @param $params
    */
   public function submit(&$params) {
+    $transaction = new CRM_Core_Transaction();
     $params['now'] = date("Ymd");
 
     // 1. call begin post process
@@ -425,6 +426,7 @@ public function submit(&$params) {
     if ($this->_activityTypeFile) {
       $className::endPostProcess($this, $params);
     }
+    $transaction->commit();
 
     return $caseObj;
   }
@@ -433,8 +435,6 @@ public function submit(&$params) {
    * Process the form submission.
    */
   public function postProcess() {
-    $transaction = new CRM_Core_Transaction();
-
     // check if dedupe button, if so return.
     $buttonName = $this->controller->getButtonName();
     if (isset($this->_dedupeButtonName) && $buttonName == $this->_dedupeButtonName) {
@@ -458,6 +458,7 @@ public function postProcess() {
     }
     // store the submitted values in an array
     $params = $this->controller->exportValues($this->_name);
+
     $this->submit($params);
 
     CRM_Core_Session::setStatus($params['statusMsg'], ts('Saved'), 'success');
